
fun{inline, asm} allocAndGetEnd(u64:u64) {
    "dup64"
    "alloc"
    "addU64"
}

fun{inline, asm} popSp(u64:) {
    "popSp"
}

fun{inline, asm} popCs(u64:) {
    "popCs"
}

fun{inline, asm} debug(u64:) {
    "debug64"
}

fun{inline, asm} halt(:) {
    "halt"
}

fun{inline, asm} write(u64,u64:u64) {
    "write"
}

fun __start(:) {
    4000u64 allocAndGetEnd(u64:u64)
    popSp(u64:)

    1000u64 allocAndGetEnd(u64:u64)
    popCs(u64:)

    main(:)

    halt(:)
}

let message1: u64 = 5u64;

fun main(:) {
    let message2: u64 = "Hello World!\n" write(u64,u64:u64);

    "Hello World!\n" write(u64,u64:u64) debug(u64:)
}
